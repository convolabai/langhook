[1mdiff --git a/README.md b/README.md[m
[1mindex fc67eab..ae1ef78 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -22,21 +22,43 @@[m [mpip install langhook[m
 ### Python SDK Usage[m
 [m
 ```python[m
[31m-from langhook import LangHookClient, LangHookClientConfig[m
[31m-[m
[31m-# Configure client to connect to your LangHook server[m
[31m-config = LangHookClientConfig(endpoint="http://localhost:8000")[m
[31m-client = LangHookClient(config)[m
[31m-[m
[31m-# Send events programmatically[m
[31m-await client.send_event({[m
[31m-    "source": "my-app",[m
[31m-    "data": {"user_id": 123, "action": "login"}[m
[31m-})[m
[31m-[m
[31m-# Query available schemas[m
[31m-schemas = await client.get_schemas()[m
[31m-print(f"Available publishers: {schemas.publishers}")[m
[32m+[m[32mimport asyncio[m
[32m+[m[32mfrom langhook import LangHookClient, LangHookClientConfig, AuthConfig[m
[32m+[m
[32m+[m[32masync def main():[m
[32m+[m[32m    # Create client configuration[m
[32m+[m[32m    config = LangHookClientConfig([m
[32m+[m[32m        endpoint="http://localhost:8000",[m
[32m+[m[32m        auth=AuthConfig(type="token", value="your-auth-token")[m
[32m+[m[32m    )[m
[32m+[m[41m    [m
[32m+[m[32m    # Use client as context manager[m
[32m+[m[32m    async with LangHookClient(config) as client:[m
[32m+[m[32m        # Create a subscription[m
[32m+[m[32m        subscription = await client.create_subscription([m
[32m+[m[32m            "Notify me when PR 1374 is approved"[m
[32m+[m[32m        )[m
[32m+[m[41m        [m
[32m+[m[32m        # Set up event listener[m
[32m+[m[32m        def event_handler(event):[m
[32m+[m[32m            print(f"Got event: {event.publisher}/{event.action}")[m
[32m+[m[41m        [m
[32m+[m[32m        # Start listening for events[m
[32m+[m[32m        stop_listening = client.listen([m
[32m+[m[32m            str(subscription.id),[m[41m [m
[32m+[m[32m            event_handler,[m[41m [m
[32m+[m[32m            {"intervalSeconds": 15}[m
[32m+[m[32m        )[m
[32m+[m[41m        [m
[32m+[m[32m        # ... do other work ...[m
[32m+[m[41m        [m
[32m+[m[32m        # Stop listening[m
[32m+[m[32m        stop_listening()[m
[32m+[m[41m        [m
[32m+[m[32m        # Clean up[m
[32m+[m[32m        await client.delete_subscription(str(subscription.id))[m
[32m+[m
[32m+[m[32masyncio.run(main())[m
 ```[m
 [m
 ### TypeScript/JavaScript SDK[m
[36m@@ -48,16 +70,49 @@[m [mnpm install langhook[m
 ```typescript[m
 import { LangHookClient, LangHookClientConfig } from 'langhook';[m
 [m
[31m-const config: LangHookClientConfig = {[m
[31m-  endpoint: 'http://localhost:8000'[m
[31m-};[m
[31m-const client = new LangHookClient(config);[m
[32m+[m[32masync function main() {[m
[32m+[m[32m  // Create client configuration[m
[32m+[m[32m  const config: LangHookClientConfig = {[m
[32m+[m[32m    endpoint: 'http://localhost:8000',[m
[32m+[m[32m    auth: {[m
[32m+[m[32m      type: 'token',[m
[32m+[m[32m      value: 'your-auth-token'[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m[41m  [m
[32m+[m[32m  // Create client[m
[32m+[m[32m  const client = new LangHookClient(config);[m
[32m+[m[41m  [m
[32m+[m[32m  // Initialize connection[m
[32m+[m[32m  await client.init();[m
[32m+[m[41m  [m
[32m+[m[32m  // Create a subscription[m
[32m+[m[32m  const subscription = await client.createSubscription([m
[32m+[m[32m    'Notify me when PR 1374 is approved'[m
[32m+[m[32m  );[m
[32m+[m[41m  [m
[32m+[m[32m  // Set up event listener[m
[32m+[m[32m  const eventHandler = (event) => {[m
[32m+[m[32m    console.log(`Got event: ${event.publisher}/${event.action}`);[m
[32m+[m[32m  };[m
[32m+[m[41m  [m
[32m+[m[32m  // Start listening for events[m
[32m+[m[32m  const stopListening = client.listen([m
[32m+[m[32m    subscription.id.toString(),[m
[32m+[m[32m    eventHandler,[m
[32m+[m[32m    { intervalSeconds: 15 }[m
[32m+[m[32m  );[m
[32m+[m[41m  [m
[32m+[m[32m  // ... do other work ...[m
[32m+[m[41m  [m
[32m+[m[32m  // Stop listening[m
[32m+[m[32m  stopListening();[m
[32m+[m[41m  [m
[32m+[m[32m  // Clean up[m
[32m+[m[32m  await client.deleteSubscription(subscription.id.toString());[m
[32m+[m[32m}[m
 [m
[31m-// Send events from your JavaScript/TypeScript app[m
[31m-await client.sendEvent({[m
[31m-  source: 'my-app',[m
[31m-  data: { userId: 123, action: 'login' }[m
[31m-});[m
[32m+[m[32mmain().catch(console.error);[m
 ```[m
 [m
 ## ðŸš€ Running LangHook Server[m
