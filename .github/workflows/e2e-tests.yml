name: End-to-End Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-asyncio httpx pytest-mock
    
    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short -x --ignore=tests/e2e/
  
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Create test environment file
      run: |
        cp .env.example .env || touch .env
        echo "DEBUG=true" >> .env
        echo "LOG_LEVEL=DEBUG" >> .env
    
    - name: Start services
      run: |
        docker compose -f docker-compose.yml -f docker-compose.test.yml up -d --build
        
    - name: Wait for services to be ready
      run: |
        # Wait for services to be healthy
        timeout 300 bash -c 'until docker compose -f docker-compose.yml -f docker-compose.test.yml ps | grep -E "(healthy|Up)"; do sleep 5; done'
        
        # Additional wait for LangHook service specifically
        timeout 120 bash -c 'until curl -f http://localhost:8000/health/ 2>/dev/null; do sleep 5; done'
    
    - name: Run end-to-end tests
      run: |
        docker compose -f docker-compose.yml -f docker-compose.test.yml run --rm test-runner
    
    - name: Collect logs on failure
      if: failure()
      run: |
        echo "=== Docker Compose Services ==="
        docker compose -f docker-compose.yml -f docker-compose.test.yml ps
        echo "=== LangHook Service Logs ==="
        docker compose -f docker-compose.yml -f docker-compose.test.yml logs langhook
        echo "=== NATS Logs ==="
        docker compose -f docker-compose.yml -f docker-compose.test.yml logs nats
        echo "=== Redis Logs ==="
        docker compose -f docker-compose.yml -f docker-compose.test.yml logs redis
        echo "=== Postgres Logs ==="
        docker compose -f docker-compose.yml -f docker-compose.test.yml logs postgres
    
    - name: Clean up
      if: always()
      run: |
        docker compose -f docker-compose.yml -f docker-compose.test.yml down -v --remove-orphans

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install safety bandit
    
    - name: Run safety check
      run: |
        safety check
      continue-on-error: true
    
    - name: Run bandit security check
      run: |
        bandit -r langhook/ -f json -o bandit-results.json || true
        bandit -r langhook/
      continue-on-error: true